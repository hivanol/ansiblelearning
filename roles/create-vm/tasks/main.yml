---
# tasks file for create-vm1
  - name: copy user-data
    template:
      src: user-data.j2
      dest: /var/lib/libvirt/images/user-data


  - name: copy meta-data
    template:
      src: meta-data.j2
      dest: /var/lib/libvirt/images/meta-data

  - name: copy network-config
    template:
      src: network-config.j2
      dest: /var/lib/libvirt/images/network-config

  - name: download {{ vm_name }} img
    shell: wget -q http://cloud-images.ubuntu.com/xenial/current/xenial-server-cloudimg-amd64-disk1.img -O /var/lib/libvirt/images/{{ vm_name }}.img

  - name: creating {{ vm_name }} iso
    shell: >-
      genisoimage -o /var/lib/libvirt/images/{{ vm_name }}_bootstrap.iso
      -V cidata -J -r
      /var/lib/libvirt/images/user-data 
      /var/lib/libvirt/images/meta-data
      /var/lib/libvirt/images/network-config

  - name: check vm already exists
    virt:
      name: "{{ vm_name }}"
      command: list_vms
    register: vms_list

  - block:
      - name: destroy old {{ vm_name }}
        virt:
          name: "{{ vm_name }}"
          state: destroyed

      - name: undefine old {{ vm_name }}
        virt:
          name: "{{ vm_name }}"
          command: undefine
    when: vm_name in vms_list.list_vms

  - name: define {{ vm_name }}
    virt:
      name: "{{ vm_name }}"
      command: define
      xml: "{{ lookup('template', 'vmtemplate.xml.j2') }}"

  - name: start {{ vm_name }}
    virt:
      name: "{{ vm_name }}"
      state: running
